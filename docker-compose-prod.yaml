#
# docker-compose-prod.yaml (PRODUCTION)
# https://github.com/COSI-Lab/
#
services:
  # --- Log server ---
  log-server:
    build: ./mirrorlog
    container_name: mirrorlog
    restart: unless-stopped
    expose:
      - 4001
    volumes:
      - "./logs:/mirror/logs"
      - "./configs:/mirror/configs:ro"
    networks:
      - mirror

  # --- Website ---
  website:
    build: ./mirror-website
    container_name: mirror-website
    restart: unless-stopped
    expose:
      - 8000
    networks:
      - mirror
    volumes:
      - "./configs:/home/mirror/configs:ro"

  # --- Website static file server / proxy ---
  website_proxy:
    build:
      context: ./mirror-website
      dockerfile: proxy.Dockerfile
    container_name: mirror-website-proxy
    restart: unless-stopped
    ports:
      - "127.0.0.1:30301:80"
    networks:
      - mirror
    depends_on:
      - website

  # --- Map ---
  map:
    build: ./mirror-map
    container_name: mirror-map
    restart: unless-stopped
    ports:
      - "30302:8080"
    volumes:
      - "./configs:/mirror/configs:ro"
      - "geolite2:/mirror/GeoLite2City"
    networks:
      - mirror
    depends_on:
      - log-server
      - metrics

  # --- Sync scheduler ---
  sync-scheduler:
    build: ./mirror-sync-scheduler
    container_name: mirror-sync-scheduler
    expose:
      - 9281
    restart: unless-stopped
    env_file:
      - configs/sync-scheduler.env
    volumes:
      - "/storage:/storage"
      - "./sync-error-logs:/mirror/error-logs"
      - "./configs:/mirror/configs:ro"
      - "./scripts:/mirror/scripts:ro"
      - "./secrets:/mirror/secrets:ro"
    networks:
      - mirror
    tty: true
    logging:
      options:
        max-size: 1g
        max-file: 5

  # --- Torrent handler ---
  # torrent-handler:
  #   build: ./mirror-torrent-handler
  #   container_name: mirror-torrent-handler
  #   restart: unless-stopped
  #   volumes:
  #     - "/storage:/storage"
  #     - "./configs:/mirror/configs:ro"
  #   networks:
  #     - mirror
  #   depends_on:
  #     - log-server

  # --- Metrics engine ---
  metrics:
    build: ./mirror-metrics
    container_name: mirror-metrics
    restart: unless-stopped
    expose:
      - 8080
      - 8081
    volumes:
      - "/var/log/nginx:/mirror/nginx:ro"
      - "metrics:/mirror/data"
    networks:
      - mirror
    depends_on:
      - log-server

  # --- Prometheus DB ---
  prometheus:
    image: prom/prometheus:latest
    container_name: mirror-prometheus
    restart: unless-stopped
    expose:
      - 9090
    volumes:
      - "./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
      - "prometheus:/prometheus"
    networks:
      - mirror
    depends_on:
      - metrics

  # --- Grafana ---
  grafana:
    image: grafana/grafana:latest
    container_name: mirror-grafana
    restart: unless-stopped
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - "grafana:/var/lib/grafana"
    networks:
      - mirror
    depends_on:
      - prometheus

networks:
  mirror:
    external: true

volumes:
  prometheus: {}
  grafana: {}
  metrics: {}
  geolite2: {}
