#
# docker-compose-prod.yaml (PRODUCTION)
# https://github.com/COSI-Lab/
#
services:
  # --- Log server ---
  log-server:
    build: ./mirrorlog
    container_name: mirrorlog
    expose:
      - 4001
    volumes:
      - "./logs:/mirror/logs"
      - "./configs:/mirror/configs:ro"
    networks:
      - mirror
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: "1024M"

  # --- API ---
  api:
    build: ./mirror-api
    container_name: mirror-api
    restart: unless-stopped
    ports:
      - "30301:8080"
    networks:
      - mirror
    volumes:
      - "./configs:/mirror/configs:ro"
    depends_on:
      - log-server
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: "1024M"

  # --- Map ---
  map:
    build: ./mirror-map
    container_name: mirror-map
    restart: unless-stopped
    ports:
      - "30302:8080"
    volumes:
      - "./configs:/mirror/configs:ro"
      - "./GeoLite2City:/mirror/GeoLite2City"
    networks:
      - mirror
    depends_on:
      - log-server
      - metrics
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: "1024M"
  
  # --- Sync scheduler ---
  sync-scheduler:
    build: ./mirror-sync-scheduler
    container_name: mirror-sync-scheduler
    restart: unless-stopped
    volumes:
      - "/storage:/storage"
      - "./configs:/mirror/configs:ro"
      - "./scripts:/mirror/scripts:ro"
    networks:
      - mirror
    depends_on:
      - log-server
    deploy:
      resources:
        limits:
          cpus: "8.0"
          memory: "16384M"
    stdin_open: true
    tty: true

  # --- Torrent handler ---
  torrent-handler:
    build: ./mirror-torrent-handler
    container_name: mirror-torrent-handler
    restart: unless-stopped
    volumes:
      - "/storage:/storage"
      - "./configs:/mirror/configs:ro"
    networks:
      - mirror
    depends_on:
      - log-server
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: "4096M"

  # --- Website ---
#  website:
#    build: ./mirror-website-nuxt
#    container_name: mirror-website
#    restart: unless-stopped
#    ports:
#      - "3001:3000"
#    networks:
#      - mirror
#    depends_on:
#      - api
#    deploy:
#      resources:
#        limits:
#          cpus: "4.0"
#          memory: "8192M"

  # --- Metrics engine ---
  metrics:
    build: ./mirror-metrics
    container_name: mirror-metrics
    restart: unless-stopped
    expose:
      - 8080
      - 8081
    volumes:
      - "/var/log/nginx:/mirror/nginx:ro"
      - "./data:/mirror/data"
    networks:
      - mirror
    depends_on:
      - log-server
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: "2048M"

  # --- Prometheus DB ---
  prometheus:
    image: prom/prometheus:latest
    container_name: mirror-prometheus
    restart: unless-stopped
    expose:
      - 9090
    volumes:
      - "./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
      - "prometheus_data:/prometheus"
    networks:
      - mirror
    depends_on:
      - metrics
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: "2048M"
  
  # --- Grafana ---
  grafana:
    image: grafana/grafana:latest
    container_name: mirror-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - "grafana-storage:/var/lib/grafana"
    networks:
      - mirror
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: "2048M"

# Lifetime of "mirror" network is not managed by this compose file
networks:
  mirror:
    external: true

# Lifetime of "prometheus_data" volume is not managed by this compose file
volumes:
  prometheus_data:
    external: true
